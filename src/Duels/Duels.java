/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Duels;

import java.awt.HeadlessException;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import Tools.DropDown;
import static Tools.getConnection.getConnection;
import static Tools.setValuesComboBox.setValuesComboBox;
import java.text.NumberFormat;

/**
 *
 * @author Viko
 */
public class Duels extends javax.swing.JFrame {

    /**
     * Creates new form Duels
     */
    public Duels() {
        initComponents();
        setValuesComboBox("select * from GENDERS G order by G.ID", jcbCategory, false, -1, false);
    }
    private static int count1 = 0;
    private static int count2 = 0;

    private void setValuesPlayer1() {
        if (jcbCategory.getSelectedIndex() == 0) {
            setValuesComboBox("Select P.ID, P.FIRSTNAME || ' ' || P.LASTNAME FULLNAME  from PLAYERS P where CATEGORY_REF = 1 order by P.ID",
                    jcbPlayer1, false, -1, false);
        } else if (jcbCategory.getSelectedIndex() == 1) {
            setValuesComboBox("Select P.ID, P.FIRSTNAME || ' ' || P.LASTNAME FULLNAME  from PLAYERS P where CATEGORY_REF = 2 order by P.ID",
                    jcbPlayer1, false, -1, false);
        }
    }

    private void setValuesPlayer2() {
        if (jcbCategory.getSelectedIndex() == 0) {
            setValuesComboBox("Select P.ID, P.FIRSTNAME || ' ' || P.LASTNAME FULLNAME  from PLAYERS P where CATEGORY_REF = 1 order by P.ID",
                    jcbPlayer2, false, -1, false);
        } else if (jcbCategory.getSelectedIndex() == 1) {
            setValuesComboBox("Select P.ID, P.FIRSTNAME || ' ' || P.LASTNAME FULLNAME  from PLAYERS P where CATEGORY_REF = 2 order by P.ID",
                    jcbPlayer2, false, -1, false);
        }
    }

    private void setTeams1() {
        setValuesComboBox("select T.ID, T.TEAM from TEAMS T order by T.ID", jcbPlayer1, false, -1, false);
    }

    private void setTeams2() {
        setValuesComboBox("select T.ID, T.TEAM from TEAMS T order by T.ID", jcbPlayer2, false, -1, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPhoto2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPhoto1 = new javax.swing.JLabel();
        jcbPlayer2 = new javax.swing.JComboBox<>();
        jcbPlayer1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PointsPlayer1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        PointsPlayer2 = new javax.swing.JTextField();
        jcbType = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jbtnSave = new javax.swing.JButton();
        jlCategory = new javax.swing.JLabel();
        jcbCategory = new javax.swing.JComboBox<>();

        setTitle("Duel");
        setMaximumSize(new java.awt.Dimension(1375, 775));
        setMinimumSize(new java.awt.Dimension(1375, 775));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1375, 775));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel4.setBackground(new java.awt.Color(0, 51, 204));

        jPhoto2.setBackground(new java.awt.Color(0, 0, 153));
        jPhoto2.setOpaque(true);

        jLabel5.setFont(new java.awt.Font("Wide Latin", 3, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("DUEL");

        jPhoto1.setBackground(new java.awt.Color(0, 0, 153));
        jPhoto1.setOpaque(true);

        jcbPlayer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPlayer2ActionPerformed(evt);
            }
        });

        jcbPlayer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPlayer1ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Duels/back.png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Duels/Points.png"))); // NOI18N
        jButton2.setText("Player1 Points");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Duels/Points.png"))); // NOI18N
        jButton3.setText("Player2 Points");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("VS");

        PointsPlayer1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PointsPlayer1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PointsPlayer1FocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText(":");

        PointsPlayer2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PointsPlayer2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PointsPlayer2FocusLost(evt);
            }
        });

        jcbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Two players", "Four players" }));
        jcbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTypeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("TYPE ");

        jbtnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Duels/Save.png"))); // NOI18N
        jbtnSave.setText("Save Result");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        jlCategory.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jlCategory.setForeground(new java.awt.Color(255, 255, 0));
        jlCategory.setText("CATEGORY");

        jcbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbType, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jcbPlayer1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPhoto1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addGap(82, 82, 82)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbPlayer2, 0, 170, Short.MAX_VALUE)
                            .addComponent(jPhoto2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PointsPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(366, 366, 366)))
                .addComponent(jbtnSave)
                .addGap(134, 134, 134))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(428, 428, 428)
                        .addComponent(jButton2)
                        .addGap(276, 276, 276)
                        .addComponent(jButton3))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(486, 486, 486)
                        .addComponent(PointsPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel7))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(557, 557, 557)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPhoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPhoto2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(124, 124, 124)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbType, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jlCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(60, 60, 60)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PointsPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(PointsPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(51, 51, 51))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(25, 25, 25)))))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 770));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
        count1 = 0;
        count2 = 0;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (jcbPlayer1.getSelectedIndex() == -1 || jcbPlayer2.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Please select players!");
        } else {
            count1++;
            String countPlayer1 = String.valueOf(count1);
            PointsPlayer1.setText(countPlayer1);
            if (count1 == 21) {
                JOptionPane.showMessageDialog(null, "Player1 is Winner!");
                if (jcbType.getSelectedIndex() == 0) {
                    try {
                        Connection con = getConnection();
                        PreparedStatement ps = con.prepareStatement("insert into DUELS (CATEGORY_REF, PLAYER1_REF, PLAYER2_REF,\n"
                                + "RESULT, IS_TEAM, SCORE_FIRST, SCORE_SECOND)\n"
                                + "values (?,?,?,?,?,?,?)");

                        ps.setInt(1, ((DropDown) jcbCategory.getSelectedItem()).getId()); // TODO : In The DataBase Category must be like 1,2,3
                        ps.setInt(2, ((DropDown) jcbPlayer1.getSelectedItem()).getId());
                        ps.setInt(3, ((DropDown) jcbPlayer2.getSelectedItem()).getId());
                        String result = count1 + " : " + count2;
                        ps.setString(4, result);
                        ps.setInt(5, 0);
                        ps.setInt(6, count1);
                        ps.setInt(7, count2);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data Inserted!");
                    } catch (HeadlessException | SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                } else if (jcbType.getSelectedIndex() == 1) {
                    try {
                        Connection con = getConnection();
                        PreparedStatement ps = con.prepareStatement("insert into DUELS (TEAM1_REF, TEAM2_REF,\n"
                                + "RESULT, IS_TEAM, SCORE_FIRST, SCORE_SECOND)\n"
                                + "values (?,?,?,?,?,?)");

                        ps.setInt(1, ((DropDown) jcbPlayer1.getSelectedItem()).getId());
                        ps.setInt(2, ((DropDown) jcbPlayer2.getSelectedItem()).getId());
                        String result = count1 + " : " + count2;
                        ps.setString(3, result);
                        ps.setInt(4, 1);
                        ps.setInt(5, count1);
                        ps.setInt(6, count2);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data Inserted!");
                    } catch (HeadlessException | SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                }
                count1 = 0;
                count2 = 0;
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        if (jcbPlayer1.getSelectedIndex() == -1 || jcbPlayer2.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Please select players!");
        } else {
            count2++;
            String countPlayer2 = String.valueOf(count2);
            PointsPlayer2.setText(countPlayer2);
            if (count2 == 21) {
                JOptionPane.showMessageDialog(null, "Player2 is Winner!");
                if (jcbType.getSelectedIndex() == 0) {
                    try {
                        Connection con = getConnection();
                        PreparedStatement ps = con.prepareStatement("insert into DUELS (CATEGORY_REF, PLAYER1_REF, PLAYER2_REF,\n"
                                + "RESULT, IS_TEAM, SCORE_FIRST, SCORE_SECOND)\n"
                                + "values (?,?,?,?,?,?,?)");

                        ps.setInt(1, ((DropDown) jcbCategory.getSelectedItem()).getId()); // TODO : INDEX
                        ps.setInt(2, ((DropDown) jcbPlayer1.getSelectedItem()).getId());
                        ps.setInt(3, ((DropDown) jcbPlayer2.getSelectedItem()).getId());
                        String result = count1 + " : " + count2;
                        ps.setString(4, result);
                        ps.setInt(5, 0);
                        ps.setInt(6, count1);
                        ps.setInt(7, count2);

                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data Inserted!");
                    } catch (HeadlessException | SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                } else if (jcbType.getSelectedIndex() == 1) {
                    try {
                        Connection con = getConnection();
                        PreparedStatement ps = con.prepareStatement("insert into DUELS (TEAM1_REF, TEAM2_REF,\n"
                                + "RESULT, IS_TEAM, SCORE_FIRST, SCORE_SECOND)\n"
                                + "values (?,?,?,?,?,?)");

                        ps.setInt(1, ((DropDown) jcbPlayer1.getSelectedItem()).getId());
                        ps.setInt(2, ((DropDown) jcbPlayer2.getSelectedItem()).getId());
                        String result = count1 + " : " + count2;
                        ps.setString(3, result);
                        ps.setInt(4, 1);
                        ps.setInt(5, count1);
                        ps.setInt(6, count2);

                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data Inserted!");
                    } catch (HeadlessException | SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                }
                count2 = 0;
                count1 = 0;
            }
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jcbPlayer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPlayer1ActionPerformed
        if (jcbPlayer1.getSelectedIndex() != -1 && jcbPlayer1.getSelectedIndex() != -1 && jcbPlayer1.getSelectedItem() != null) {
            if (jcbType.getSelectedIndex() == 0) {
                try {
                    Connection con = getConnection();
                    PreparedStatement ps = con.prepareStatement("select\n"
                            + "  P.ID, P.PICTURE\n"
                            + "from\n"
                            + "  PLAYERS P\n"
                            + "where\n"
                            + " P.ID =  " + ((DropDown) jcbPlayer1.getSelectedItem()).getId());

                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        byte[] img = rs.getBytes("PICTURE");
                        ImageIcon image = new ImageIcon(img);
                        Image im = image.getImage();
                        Image myImg = im.getScaledInstance(jPhoto1.getWidth(), jPhoto1.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon newImage = new ImageIcon(myImg);
                        jPhoto1.setIcon(newImage);
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if (jcbType.getSelectedIndex() == 1) {
                try {
                    Connection con = getConnection();
                    PreparedStatement ps = con.prepareStatement("select\n"
                            + "  T.ID, T.PICTURE\n"
                            + "from\n"
                            + "  TEAMS T\n"
                            + "where\n"
                            + "  T.ID = " + ((DropDown) jcbPlayer1.getSelectedItem()).getId());

                    ResultSet rs = ps.executeQuery();
                    //int id = rs.getInt(1);
                    if (rs.next()) {
                        byte[] img = rs.getBytes("PICTURE");
                        ImageIcon image = new ImageIcon(img);
                        Image im = image.getImage();
                        Image myImg = im.getScaledInstance(jPhoto1.getWidth(), jPhoto1.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon newImage = new ImageIcon(myImg);
                        jPhoto1.setIcon(newImage);
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_jcbPlayer1ActionPerformed

    private void jcbPlayer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPlayer2ActionPerformed
        if (jcbPlayer2.getSelectedIndex() != -1 && jcbPlayer2.getSelectedIndex() != -1 && jcbPlayer2.getSelectedItem() != null) {
            if (jcbType.getSelectedIndex() == 0) {
                try {
                    Connection con = getConnection();
                    PreparedStatement ps = con.prepareStatement("select\n"
                            + "  P.ID, P.PICTURE\n"
                            + "from\n"
                            + "  PLAYERS P\n"
                            + "where\n"
                            + "  P.ID = " + ((DropDown) jcbPlayer2.getSelectedItem()).getId());

                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        byte[] img = rs.getBytes("PICTURE");
                        ImageIcon image = new ImageIcon(img);
                        Image im = image.getImage();
                        Image myImg = im.getScaledInstance(jPhoto2.getWidth(), jPhoto2.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon newImage = new ImageIcon(myImg);
                        jPhoto2.setIcon(newImage);
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            } else if (jcbType.getSelectedIndex() == 1) {
                try {
                    Connection con = getConnection();
                    PreparedStatement ps = con.prepareStatement("select\n"
                            + "  T.ID, T.PICTURE\n"
                            + "from\n"
                            + "  TEAMS T\n"
                            + "where\n"
                            + "  T.ID = " + ((DropDown) jcbPlayer2.getSelectedItem()).getId());

                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        byte[] img = rs.getBytes("PICTURE");
                        ImageIcon image = new ImageIcon(img);
                        Image im = image.getImage();
                        Image myImg = im.getScaledInstance(jPhoto2.getWidth(), jPhoto2.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon newImage = new ImageIcon(myImg);
                        jPhoto2.setIcon(newImage);
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_jcbPlayer2ActionPerformed

    private void jcbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTypeActionPerformed
        if (jcbType.getSelectedIndex() == 0) {
            setValuesPlayer1();
            setValuesPlayer2();
            jcbCategory.setVisible(true);
            jlCategory.setVisible(true);
            jPhoto1.setIcon(null);
            jPhoto2.setIcon(null);
            PointsPlayer1.setText("");
            PointsPlayer2.setText("");
            count1 = 0;
            count2 = 0;
        } else {
            jcbCategory.setVisible(false);
            jlCategory.setVisible(false);
            jcbPlayer1.removeAllItems();
            jcbPlayer2.removeAllItems();
            jPhoto1.setIcon(null);
            jPhoto2.setIcon(null);
            PointsPlayer1.setText("");
            PointsPlayer2.setText("");
            count1 = 0;
            count2 = 0;
            setTeams1();
            setTeams2();
        }
    }//GEN-LAST:event_jcbTypeActionPerformed

    private void jcbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCategoryActionPerformed
        jcbType.setSelectedIndex(0);
    }//GEN-LAST:event_jcbCategoryActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        if (jcbPlayer1.getSelectedIndex() == -1 || jcbPlayer2.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Please select players!");
        } else {
            if (jcbType.getSelectedIndex() == 0) {
                try {
                    Connection con = getConnection();
                    PreparedStatement ps = con.prepareStatement("insert into DUELS (CATEGORY_REF, PLAYER1_REF, PLAYER2_REF,\n"
                            + "RESULT, IS_TEAM, SCORE_FIRST, SCORE_SECOND)\n"
                            + "values (?,?,?,?,?,?,?)");

                    ps.setInt(1, ((DropDown) jcbCategory.getSelectedItem()).getId()); // TODO : INDEX
                    ps.setInt(2, ((DropDown) jcbPlayer1.getSelectedItem()).getId());
                    ps.setInt(3, ((DropDown) jcbPlayer2.getSelectedItem()).getId());
                    String result = count1 + " : " + count2;
                    ps.setString(4, result);
                    ps.setInt(5, 0);
                    ps.setInt(6, count1);
                    ps.setInt(7, count2);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Inserted!");
                    count1 = 0;
                    count2 = 0;
                } catch (HeadlessException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            } else if (jcbType.getSelectedIndex() == 1) {
                try {
                    Connection con = getConnection();
                    PreparedStatement ps = con.prepareStatement("insert into DUELS (TEAM1_REF, TEAM2_REF,\n"
                            + "RESULT, IS_TEAM, SCORE_FIRST, SCORE_SECOND)\n"
                            + "values (?,?,?,?,?,?)");

                    //ps.setInt(1, jcbCategory.getSelectedIndex());
                    ps.setInt(1, ((DropDown) jcbPlayer1.getSelectedItem()).getId());
                    ps.setInt(2, ((DropDown) jcbPlayer2.getSelectedItem()).getId());
                    String result = PointsPlayer1 + " : " + PointsPlayer2;
                    ps.setString(3, result);
                    ps.setInt(4, 1);
                    ps.setString(5, PointsPlayer1.getText());
                    ps.setString(6, PointsPlayer2.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Data Inserted!");
                    count1 = 0;
                    count2 = 0;
                } catch (HeadlessException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void PointsPlayer1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PointsPlayer1FocusLost
        if (!PointsPlayer1.getText().isEmpty()) {
            try {
                NumberFormat nf = NumberFormat.getInstance();
                String formattedText = nf.format(Integer.parseInt(PointsPlayer1.getText()));
                PointsPlayer1.setText(formattedText);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Грешен формат!");
                PointsPlayer1.setText("");
            }
        }
    }//GEN-LAST:event_PointsPlayer1FocusLost

    private void PointsPlayer2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PointsPlayer2FocusLost
        if (!PointsPlayer2.getText().isEmpty()) {
            try {
                NumberFormat nf = NumberFormat.getInstance();
                String formattedText = nf.format(Integer.parseInt(PointsPlayer2.getText()));
                PointsPlayer2.setText(formattedText);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Грешен формат!");
                PointsPlayer2.setText("");
            }
        }
    }//GEN-LAST:event_PointsPlayer2FocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Duels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Duels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Duels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Duels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Duels().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PointsPlayer1;
    private javax.swing.JTextField PointsPlayer2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jPhoto1;
    private javax.swing.JLabel jPhoto2;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JComboBox<String> jcbCategory;
    private javax.swing.JComboBox<String> jcbPlayer1;
    private javax.swing.JComboBox<String> jcbPlayer2;
    private javax.swing.JComboBox<String> jcbType;
    private javax.swing.JLabel jlCategory;
    // End of variables declaration//GEN-END:variables
}
